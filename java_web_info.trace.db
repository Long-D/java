2018-07-11 00:55:44 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Таблица "DATABASECHANGELOGLOCK" не найдена
Table "DATABASECHANGELOGLOCK" not found; SQL statement:
select count(*) from PUBLIC.DATABASECHANGELOGLOCK [42102-197]
2018-07-11 13:11:36 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]" [50000-197]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:307)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:95)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2506)
	at org.h2.mvstore.MVStore.panic(MVStore.java:383)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:364)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2934)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:155)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:100)
	at org.h2.engine.Database.getPageStore(Database.java:2538)
	at org.h2.engine.Database.open(Database.java:709)
	at org.h2.engine.Database.openDatabase(Database.java:286)
	at org.h2.engine.Database.<init>(Database.java:280)
	at org.h2.engine.Engine.openSession(Engine.java:66)
	at org.h2.engine.Engine.openSession(Engine.java:179)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:157)
	at org.h2.engine.Engine.createSession(Engine.java:140)
	at org.h2.engine.Engine.createSession(Engine.java:28)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:351)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:103)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:736)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:668)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:385)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1692)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1630)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:297)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1080)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at org.communis.javawebintro.AppBoot.main(AppBoot.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]" [50000-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	... 57 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:870)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:350)
	... 51 more
2018-07-20 10:40:50 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]" [50000-197]
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convert(DbException.java:307)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:95)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2506)
	at org.h2.mvstore.MVStore.panic(MVStore.java:383)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:364)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2934)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:155)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:100)
	at org.h2.engine.Database.getPageStore(Database.java:2538)
	at org.h2.engine.Database.open(Database.java:709)
	at org.h2.engine.Database.openDatabase(Database.java:286)
	at org.h2.engine.Database.<init>(Database.java:280)
	at org.h2.engine.Engine.openSession(Engine.java:66)
	at org.h2.engine.Engine.openSession(Engine.java:179)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:157)
	at org.h2.engine.Engine.createSession(Engine.java:140)
	at org.h2.engine.Engine.createSession(Engine.java:28)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:351)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:103)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:736)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:668)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:385)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1692)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1630)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:297)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1080)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at org.communis.javawebintro.AppBoot.main(AppBoot.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]" [50000-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	... 57 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/Dmitriy/Desktop/Praktick/JavaWebIntro/java_web_info.mv.db [1.4.197/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:870)
	at org.h2.mvstore.FileStore.open(FileStore.java:173)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:350)
	... 51 more
2018-07-20 11:57:01 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Таблица "PERMISSIONS" уже существует
Table "PERMISSIONS" already exists; SQL statement:
CREATE TABLE ls_user_attributes      --// сущность для хранения информации о атрибутах пользователя на ldap-сервере
(
  id BIGINT AUTO_INCREMENT NOT NULL,    --// уникальный идентификатор
  name CHARACTER VARYING NOT NULL,     --// атрибут имени
  surname CHARACTER VARYING NOT NULL,  --// атрибут фамилии
  second_name CHARACTER VARYING,       --// атрибут отчества
  mail CHARACTER VARYING,              --// атрибут почты
  login CHARACTER VARYING NOT NULL,    --// атрибут логина
  PRIMARY KEY (id)
);

CREATE TABLE ls_auth                            --// сущность для хранения ldap-серверов
(
  id BIGINT AUTO_INCREMENT NOT NULL,                          --// суникальный идентификатор
  date_open TIMESTAMP NOT NULL,                   --// дата создания
  address CHARACTER VARYING NOT NULL,             --// url ldap-сервера
  port CHARACTER VARYING NOT NULL,                --// порт ldap-сервера
  name CHARACTER VARYING NOT NULL,                --// наименование ldap-сервера
  groups_directory CHARACTER VARYING NOT NULL,    --// директория с группами пользователей
  users_directory CHARACTER VARYING NOT NULL,     --// директория с пользователями
  active BOOLEAN DEFAULT TRUE NOT NULL,           --// флаг активности ldap-сервера
  role_references CHARACTER VARYING NOT NULL,     --// связь групп пользователей с ролями системы
  user_attributes BIGINT NOT NULL,                --// ссылка на сущность с информацией об атрибутах на ldap-сервере
  domain CHARACTER VARYING NOT NULL,                --//
  ldap_login CHARACTER VARYING NOT NULL,                --//
  ldap_password CHARACTER VARYING NOT NULL,                --//
  credentials_auth BOOLEAN DEFAULT FALSE NOT NULL,
  role_from_group BOOLEAN DEFAULT FALSE NOT NULL,
  readonly BOOLEAN DEFAULT TRUE NOT NULL,
  user_class CHARACTER VARYING NOT NULL DEFAULT 'inetOrgPerson',                --//
  group_class CHARACTER VARYING NOT NULL DEFAULT 'posixGroup',                --//
  PRIMARY KEY (id),
  FOREIGN KEY (user_attributes) REFERENCES ldap_user_attributes (id)
);

CREATE TABLE dev
(
  id                  BIGINT AUTO_INCREMENT NOT NULL,                    -- // уникальный идентификатор
  login               CHARACTER VARYING NOT NULL UNIQUE,     -- // логин
  surname             CHARACTER VARYING NOT NULL,            -- // фамилия
  name                CHARACTER VARYING NOT NULL,            -- // имя
  second_name         CHARACTER VARYING,                     -- // отчество
  date_create         TIMESTAMP NOT NULL,                    -- // дата создания
  date_block          TIMESTAMP,                             -- // дата блокировки
  date_last_online    TIMESTAMP,                             -- // дата последней активности в системе
  password            CHARACTER VARYING NOT NULL,            -- // пароль
  mail                CHARACTER VARYING NOT NULL,            -- // почтовый ящик
  role                CHARACTER VARYING,            -- // роль в системе
  status              CHARACTER VARYING NOT NULL,            -- // статус автивности аккаунта
  id_ldap             BIGINT,
  PRIMARY KEY (id),
  FOREIGN KEY (id_ldap) REFERENCES ldap_auth (id)
);

INSERT INTO dev (login, surname, name, date_create, password, mail, status, role)
VALUES('root','Администратор', 'Администратор', CURRENT_TIMESTAMP,
       '$2a$10$LijUmixpYL0i9rRvwXrnX.heUijboQzE3PsoCrxuJANIDVX28FNjS',
       'admin@email', 'ACTIVE', 'ROLE_ADMIN');



CREATE TABLE permissions                            --// сущность для связи разрешений с ролями пользователей
(
  id     BIGINT AUTO_INCREMENT NOT NULL,            --// уникальный идентификатор
  action CHARACTER VARYING NOT NULL,                --// наименование разрешения
  role   CHARACTER VARYING NOT NULL,                --// роль
  PRIMARY KEY (id)
); [42101-197]
2018-07-20 11:58:46 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Таблица "LS_USER_ATTRIBUTES" уже существует
Table "LS_USER_ATTRIBUTES" already exists; SQL statement:
CREATE TABLE ls_user_attributes      --// сущность для хранения информации о атрибутах пользователя на ldap-сервере
(
  id BIGINT AUTO_INCREMENT NOT NULL,    --// уникальный идентификатор
  name CHARACTER VARYING NOT NULL,     --// атрибут имени
  surname CHARACTER VARYING NOT NULL,  --// атрибут фамилии
  second_name CHARACTER VARYING,       --// атрибут отчества
  mail CHARACTER VARYING,              --// атрибут почты
  login CHARACTER VARYING NOT NULL,    --// атрибут логина
  PRIMARY KEY (id)
);

CREATE TABLE ls_auth                            --// сущность для хранения ldap-серверов
(
  id BIGINT AUTO_INCREMENT NOT NULL,                          --// суникальный идентификатор
  date_open TIMESTAMP NOT NULL,                   --// дата создания
  address CHARACTER VARYING NOT NULL,             --// url ldap-сервера
  port CHARACTER VARYING NOT NULL,                --// порт ldap-сервера
  name CHARACTER VARYING NOT NULL,                --// наименование ldap-сервера
  groups_directory CHARACTER VARYING NOT NULL,    --// директория с группами пользователей
  users_directory CHARACTER VARYING NOT NULL,     --// директория с пользователями
  active BOOLEAN DEFAULT TRUE NOT NULL,           --// флаг активности ldap-сервера
  role_references CHARACTER VARYING NOT NULL,     --// связь групп пользователей с ролями системы
  user_attributes BIGINT NOT NULL,                --// ссылка на сущность с информацией об атрибутах на ldap-сервере
  domain CHARACTER VARYING NOT NULL,                --//
  ldap_login CHARACTER VARYING NOT NULL,                --//
  ldap_password CHARACTER VARYING NOT NULL,                --//
  credentials_auth BOOLEAN DEFAULT FALSE NOT NULL,
  role_from_group BOOLEAN DEFAULT FALSE NOT NULL,
  readonly BOOLEAN DEFAULT TRUE NOT NULL,
  user_class CHARACTER VARYING NOT NULL DEFAULT 'inetOrgPerson',                --//
  group_class CHARACTER VARYING NOT NULL DEFAULT 'posixGroup',                --//
  PRIMARY KEY (id),
  FOREIGN KEY (user_attributes) REFERENCES ldap_user_attributes (id)
);

CREATE TABLE dev
(
  id                  BIGINT AUTO_INCREMENT NOT NULL,                    -- // уникальный идентификатор
  login               CHARACTER VARYING NOT NULL UNIQUE,     -- // логин
  surname             CHARACTER VARYING NOT NULL,            -- // фамилия
  name                CHARACTER VARYING NOT NULL,            -- // имя
  second_name         CHARACTER VARYING,                     -- // отчество
  date_create         TIMESTAMP NOT NULL,                    -- // дата создания
  date_block          TIMESTAMP,                             -- // дата блокировки
  date_last_online    TIMESTAMP,                             -- // дата последней активности в системе
  password            CHARACTER VARYING NOT NULL,            -- // пароль
  mail                CHARACTER VARYING NOT NULL,            -- // почтовый ящик
  role                CHARACTER VARYING,            -- // роль в системе
  status              CHARACTER VARYING NOT NULL,            -- // статус автивности аккаунта
  id_ldap             BIGINT,
  PRIMARY KEY (id),
  FOREIGN KEY (id_ldap) REFERENCES ldap_auth (id)
);

INSERT INTO dev (login, surname, name, date_create, password, mail, status, role)
VALUES('root','Администратор', 'Администратор', CURRENT_TIMESTAMP,
       '$2a$10$LijUmixpYL0i9rRvwXrnX.heUijboQzE3PsoCrxuJANIDVX28FNjS',
       'admin@email', 'ACTIVE', 'ROLE_ADMIN'); [42101-197]
2018-07-20 11:59:24 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: Таблица "LS_USER_ATTRIBUTES" уже существует
Table "LS_USER_ATTRIBUTES" already exists; SQL statement:
CREATE TABLE ls_user_attributes      --// сущность для хранения информации о атрибутах пользователя на ldap-сервере
(
  id BIGINT AUTO_INCREMENT NOT NULL,    --// уникальный идентификатор
  name CHARACTER VARYING NOT NULL,     --// атрибут имени
  surname CHARACTER VARYING NOT NULL,  --// атрибут фамилии
  second_name CHARACTER VARYING,       --// атрибут отчества
  mail CHARACTER VARYING,              --// атрибут почты
  login CHARACTER VARYING NOT NULL,    --// атрибут логина
  PRIMARY KEY (id)
);

CREATE TABLE ls_auth                            --// сущность для хранения ldap-серверов
(
  id BIGINT AUTO_INCREMENT NOT NULL,                          --// суникальный идентификатор
  date_open TIMESTAMP NOT NULL,                   --// дата создания
  address CHARACTER VARYING NOT NULL,             --// url ldap-сервера
  port CHARACTER VARYING NOT NULL,                --// порт ldap-сервера
  name CHARACTER VARYING NOT NULL,                --// наименование ldap-сервера
  groups_directory CHARACTER VARYING NOT NULL,    --// директория с группами пользователей
  users_directory CHARACTER VARYING NOT NULL,     --// директория с пользователями
  active BOOLEAN DEFAULT TRUE NOT NULL,           --// флаг активности ldap-сервера
  role_references CHARACTER VARYING NOT NULL,     --// связь групп пользователей с ролями системы
  user_attributes BIGINT NOT NULL,                --// ссылка на сущность с информацией об атрибутах на ldap-сервере
  domain CHARACTER VARYING NOT NULL,                --//
  ldap_login CHARACTER VARYING NOT NULL,                --//
  ldap_password CHARACTER VARYING NOT NULL,                --//
  credentials_auth BOOLEAN DEFAULT FALSE NOT NULL,
  role_from_group BOOLEAN DEFAULT FALSE NOT NULL,
  readonly BOOLEAN DEFAULT TRUE NOT NULL,
  user_class CHARACTER VARYING NOT NULL DEFAULT 'inetOrgPerson',                --//
  group_class CHARACTER VARYING NOT NULL DEFAULT 'posixGroup',                --//
  PRIMARY KEY (id),
  FOREIGN KEY (user_attributes) REFERENCES ldap_user_attributes (id)
);

CREATE TABLE dev
(
  id                  BIGINT AUTO_INCREMENT NOT NULL,                    -- // уникальный идентификатор
  login               CHARACTER VARYING NOT NULL UNIQUE,     -- // логин
  surname             CHARACTER VARYING NOT NULL,            -- // фамилия
  name                CHARACTER VARYING NOT NULL,            -- // имя
  second_name         CHARACTER VARYING,                     -- // отчество
  date_create         TIMESTAMP NOT NULL,                    -- // дата создания
  date_block          TIMESTAMP,                             -- // дата блокировки
  date_last_online    TIMESTAMP,                             -- // дата последней активности в системе
  password            CHARACTER VARYING NOT NULL,            -- // пароль
  mail                CHARACTER VARYING NOT NULL,            -- // почтовый ящик
  role                CHARACTER VARYING,            -- // роль в системе
  status              CHARACTER VARYING NOT NULL,            -- // статус автивности аккаунта
  id_ldap             BIGINT,
  PRIMARY KEY (id),
  FOREIGN KEY (id_ldap) REFERENCES ldap_auth (id)
);

INSERT INTO dev (login, surname, name, date_create, password, mail, status, role)
VALUES('root','Администратор', 'Администратор', CURRENT_TIMESTAMP,
       '$2a$10$LijUmixpYL0i9rRvwXrnX.heUijboQzE3PsoCrxuJANIDVX28FNjS',
       'admin@email', 'ACTIVE', 'ROLE_ADMIN'); [42101-197]
